name: ci-pipeline

on:
  push

env:
  DEFAULT_PYTHON_VERSION: '3.10'

jobs:
  pytest:
    strategy:
      matrix:
        operating_system: [ubuntu-latest, macos-latest, windows-latest]
        python_version: ['3.10']
    runs-on: ${{ matrix.operating_system }}
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3
      - name: Setup Python.
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install poetry, and then install dependency of project.
        run: pip install poetry && poetry update && poetry install
      - name: Run unit tests with `pytest`.
        run: poetry run pytest
  
  flake8:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3
      - name: Setup Python.
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}
      - name: Install poetry, and then install dependency of project.
        run: pip install poetry && poetry update && poetry install
      - name: Lint the code with `flake8`.
        run: poetry run flake8

  black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3
      - name: Setup Python.
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}
      - name: Install poetry, and then install dependency of project.
        run: pip install poetry && poetry update && poetry install
      - name: Check formatting with `black`.
        run: poetry run black --check --line-length 120 .

  isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3
      - name: Setup Python.
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}
      - name: Install poetry, and then install dependency of project.
        run: pip install poetry && poetry update && poetry install
      - name: Check Imports with `isort`.
        run: poetry run isort --check .

  mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3
      - name: Setup Python.
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}
      - name: Install poetry, and then install dependency of project.
        run: pip install poetry && poetry update && poetry install
      - name: Check typing with `mypy`.
        run: poetry run mypy .

